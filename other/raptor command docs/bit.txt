PACKAGE DOCUMENTATION

package bit
    import "dctech/raptor/commands/bit"



FUNCTIONS

func CommandBit_And(script *raptor.Script, params []*raptor.Value)
    Ands two values.

	bit:and a b

    Returns a & b

func CommandBit_LShift(script *raptor.Script, params []*raptor.Value)
    Shifts the value left. Count values of 0 or less are given the value 1.

	bit:lshift a [count]

    Returns the param shifted "count" places

func CommandBit_Not(script *raptor.Script, params []*raptor.Value)
    Inverts a value.

	bit:not a

    Returns a ^ -1

func CommandBit_Or(script *raptor.Script, params []*raptor.Value)
    Ors two values.

	bit:or a b

    Returns a | b

func CommandBit_RShift(script *raptor.Script, params []*raptor.Value)
    Shifts the value right. Count values of 0 or less are given the value 1.

	bit:rshift a [count]

    Returns the param shifted "count" places

func CommandBit_Xor(script *raptor.Script, params []*raptor.Value)
    Xors two values.

	bit:xor a b

    Returns a ^ b


