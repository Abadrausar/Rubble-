PACKAGE DOCUMENTATION

package guts
    import "rubble/guts"



FUNCTIONS

func Command_Abort(script *rex.Script, params []*rex.Value)
    Causes rubble to abort with an error, use for correctable errors like
    configuration problems.

	rubble:abort msg

    Returns unchanged.

func Command_ActivateAddon(script *rex.Script, params []*rex.Value)
    Activates an addon.

	rubble:activate_addon name

    THIS COMMAND IS EXTREMELY DANGEROUS! The addon is not really activated,
    but it's files are added to the file list, this makes this command
    exceptionally dangerous and not to be used except for special cases by
    users who know what they are doing. It is best to only use this command
    from an init script (or maybe a pre script). Does nothing if the addon
    is already active. Returns unchanged.

func Command_AddFile(script *rex.Script, params []*rex.Value)
    Adds a file.

	rubble:add_file name contents

    THIS COMMAND IS EXTREMELY DANGEROUS! Depending on when the file is added
    parsing could end up in a broken state! I have no idea what kind of bugs
    could be created by using this command, but I am sure they are legion.
    It is best to only use this command from an init script (or maybe a pre
    script). If the file already exists it's contents are replaced, just
    like an normal override. Returns unchanged.

func Command_CallTemplate(script *rex.Script, params []*rex.Value)
    Calls a Rubble template.

	rubble:calltemplate name [params...]

    Returns the templates return value.

func Command_CurrentFile(script *rex.Script, params []*rex.Value)
    Returns the name of the current file.

	rubble:currentfile

    Returns the file name.

func Command_ExpandVars(script *rex.Script, params []*rex.Value)
    Expands Rubble variables.

	rubble:expandvars raws

    Returns the raws with all Rubble variables expanded.

func Command_GetVar(script *rex.Script, params []*rex.Value)
    Gets the value of a Rubble variable.

	rubble:getvar name

    Returns the value.

func Command_Parse(script *rex.Script, params []*rex.Value)
    Parses Rubble code.

	rubble:stageparse code [stage]

    Note that how code is parsed depends on the parse stage. Valid values
    for stage are:

	0 (or just leave it off) to use the current stage
	3 for preparse
	4 for parse
	5 for postparse

    The other stage numbers are not valid for the stage parser. Returns the
    result of running code through the stage parser.

func Command_SetVar(script *rex.Script, params []*rex.Value)
    Sets a Rubble variable.

	rubble:setvar name value

    Returns unchanged.

func Command_Template(script *rex.Script, params []*rex.Value)
    Defines a Rubble script template.

	rubble:template name code

    code MUST be a block created via a block declaration! Parameter names,
    count, and default values is determined by the block meta-data. Returns
    unchanged.


