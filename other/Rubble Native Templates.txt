	
Rubble Template Documentation
Built-in Native Templates

==============================================
{!TEMPLATE;<NAME>;<CODE>}
{!TEMPLATE;<NAME>;<PARAM>...;<CODE>}
{!TEMPLATE;<NAME>;<PARAM>=<DEFAULT_VALUE>...;<CODE>}
	Creates a new template definition with name <NAME>, subsequently calling {<NAME>} will return a new parse of <CODE>.

	Calling {<NAME>;<ARGUMENT_1>;<ARGUMENT_2>} will replace instances of %<PARAM_1>, %{<PARAM_1>}, or %1 with <ARGUMENT_1>, instances of %<PARAM_2>, %{<PARAM_2>}, or %2 with <ARGUMENT_2>, etcetera. Default values may be specified for parameters.
	
	If a parameters value has the form $<VALUE> or ${<VALUE>} <VALUE> will be treated as a variable name and replaced with the variables value, the same also holds for any such string found in <CODE>
	
	Example:
		{!TEMPLATE;FOO;bar}
		{FOO}
		{FOO}
		{!TEMPLATE;GREET;thing;Hello %{thing}!}
		{GREET;World}
		{!TEMPLATE;GREET_DWARF;dwarf=Urist;Hello %{dwarf}!}
		{GREET_DWARF}
		{GREET_DWARF;Led}
		{SET;TEST;‼Fun‼}
		{GREET;$TEST}
	
	evaluates to
		bar
		bar
		Hello World!
		Hello Urist!
		Hello Led!
		Hello ‼Fun‼!

==============================================
{!SCRIPT_TEMPLATE;<NAME>;<CODE>}
{!SCRIPT_TEMPLATE;<NAME>;...;<CODE>}
{!SCRIPT_TEMPLATE;<NAME>;<PARAM>...;<CODE>}
{!SCRIPT_TEMPLATE;<NAME>;<PARAM>=<DEFAULT_VALUE>...;<CODE>}
	Exactly like !TEMPLATE except <CODE> should be a NCA script and any params are declared as NCA variables.
	
	Example:
		{!SCRIPT_TEMPLATE;FOO;(ret "bar")}
		{!TEMPLATE;GREET;__thing__;(append Hello [__thing__] !)}
		{!TEMPLATE;LIST;...;
			(var tmp)
			(foreach params {
				(set tmp (append [tmp] ", " [params 1]))
				(break -1)
			})
		}
		{FOO}
		{GREET;World}
		Dwarves: {LIST;Urist;Led}
	
	evaluates to
		bar
		Hello World!
		Dwarves: Urist, Led

==============================================
{!SCRIPT;<NCACODE>} or {!SCRIPT;<NCACODE>;<PARAMS>...}
{SCRIPT;<NCACODE>} or {SCRIPT;<NCACODE>;<PARAMS>...}
{#SCRIPT;<NCACODE>} or {#SCRIPT;<NCACODE>;<PARAMS>...}
	Runs a NCA4 script as a command and returns whatever the script returns.

==============================================
{#ADV_TIME;<AMOUNT>;<UNIT>}
	Time unit to adventure mode ticks conversion template. Returns a number of ticks that corresponds to <AMOUNT> <UNIT>s in adventure mode. The allowed units are SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, YEAR and their respective plurals.
	
	Examples:
		{#ADV_TIME;1;SECOND} -> 1
		{#ADV_TIME;2;MINUTES} -> 120
		{#ADV_TIME;24;HOURS} -> 86400
		{#ADV_TIME;1;DAY} -> 86400
		{#ADV_TIME;1;YEAR} -> 29030400

==============================================
{#FORT_TIME;<AMOUNT>;<UNIT>}
	Time unit to fortress mode ticks conversion template. Returns a number of ticks that corresponds to <AMOUNT> <UNIT>s in fortress mode. The allowed units are SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, YEAR and their respective plurals.

	Examples:
		{#FORT_TIME;1;SECOND} -> 0
		{#FORT_TIME;2;MINUTES} -> 1
		{#FORT_TIME;24;HOURS} -> 1200
		{#FORT_TIME;1;DAY} -> 1200
		{#FORT_TIME;1;YEAR} -> 403200
