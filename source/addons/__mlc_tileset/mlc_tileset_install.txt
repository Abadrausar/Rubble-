
This file uses Rubble, to install this tileset extract all files into a folder in the Rubble addons directory.
For manual installation just copy the files in "img" to "data/art" and edit your init file to use the new tileset.
All tile numbers/colors are the same as vanilla.

{SCRIPT;
	'Edit the init files.
	Note that regex:replace is provided by Rubble, it is not avalible in NCASH or the like.
	(note to self: add regex NCA commands to the NCA6 std lib)'
	
	(var init (fileio:read (append [rubble:dfdir] "/data/init/init.txt")))
	(var d_init (fileio:read (append [rubble:dfdir] "/data/init/d_init.txt")))
	
	(set init (regex:replace "\\[FONT:[^]]+\\]" [init] "[FONT:MLC 10x10.png]"))
	(set init (regex:replace "\\[FULLFONT:[^]]+\\]" [init] "[FULLFONT:MLC 16x16.png]"))
	
	(set init (regex:replace "\\[GRAPHICS_FONT:[^]]+\\]" [init] "[GRAPHICS_FONT:MLC 10x10.png]"))
	(set init (regex:replace "\\[GRAPHICS_FULLFONT:[^]]+\\]" [init] "[GRAPHICS_FULLFONT:MLC 16x16.png]"))
	
	(set d_init (regex:replace "\\[SKY:[0-9]+:[0-9]+:[0-9]+:[0-9]+\\]" [d_init] "[SKY:178:3:0:0]"))
	(set d_init (regex:replace "\\[CHASM:[0-9]+:[0-9]+:[0-9]+:[0-9]+\\]" [d_init] "[CHASM:178:3:0:0]"))
	
	(set d_init (regex:replace "\\[PILLAR_TILE:(?:[0-9]+|'.')\\]" [d_init] "[PILLAR_TILE:'O']"))
	
	(set d_init (regex:replace "\\[TRACK_N:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_N:208I]"))
	(set d_init (regex:replace "\\[TRACK_S:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_S:210I]"))
	(set d_init (regex:replace "\\[TRACK_E:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_E:198I]"))
	(set d_init (regex:replace "\\[TRACK_W:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_W:181I]"))
	(set d_init (regex:replace "\\[TRACK_NS:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_NS:186I]"))
	(set d_init (regex:replace "\\[TRACK_NE:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_NE:200I]"))
	(set d_init (regex:replace "\\[TRACK_NW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_NW:188I]"))
	(set d_init (regex:replace "\\[TRACK_SE:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_SE:201I]"))
	(set d_init (regex:replace "\\[TRACK_SW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_SW:187I]"))
	(set d_init (regex:replace "\\[TRACK_EW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_EW:205I]"))
	(set d_init (regex:replace "\\[TRACK_NSE:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_NSE:204I]"))
	(set d_init (regex:replace "\\[TRACK_NSW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_NSW:185I]"))
	(set d_init (regex:replace "\\[TRACK_NEW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_NEW:202I]"))
	(set d_init (regex:replace "\\[TRACK_SEW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_SEW:203I]"))
	(set d_init (regex:replace "\\[TRACK_NSEW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_NSEW:206I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_N:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_N:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_S:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_S:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_E:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_E:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_W:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_W:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_NS:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_NS:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_NE:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_NE:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_NW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_NW:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_SE:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_SE:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_SW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_SW:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_EW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_EW:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_NSE:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_NSE:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_NSW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_NSW:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_NEW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_NEW:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_SEW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_SEW:30I]"))
	(set d_init (regex:replace "\\[TRACK_RAMP_NSEW:(?:[0-9]+|'.')I?\\]" [d_init] "[TRACK_RAMP_NSEW:30I]"))
	
	(fileio:write (append [rubble:dfdir] "/data/init/init.txt") [init])
	(fileio:write (append [rubble:dfdir] "/data/init/d_init.txt") [d_init])
	
	
	'An ugly hack, but I failed to find a copy file function in the go stdlib and this works fine.'
	(fileio:write (append [rubble:dfdir] "/data/art/MLC 10x10.png") (fileio:read (append [rubble:addonsdir] "/mlc_tileset/img/MLC 10x10.png")))
	
	(fileio:write (append [rubble:dfdir] "/data/art/MLC 16x16.png") (fileio:read (append [rubble:addonsdir] "/mlc_tileset/img/MLC 16x16.png")))
	
	(ret "")
}


{#SCRIPT;
	(rubble:skipfile "mlc_tileset_tiles")
	(rubble:skipfile "mlc_tileset_install")
}
