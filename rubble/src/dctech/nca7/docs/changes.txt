
v7
	Better support for semi and fully readonly Indexables
		Indexables may now reject some or all writes
	Multiple level indexing syntax changed
		[test index1 index2]
	Better type support
		new type: bool
		All types (except object) now parsed when calling TokenToValue
	Indexable literal syntax
		Example:
			(var test <map, akey="a value", also_a_key=<array, one, two, three>>)
	New Lexer. The old lexer needed to be compatible with version 2 and that made it nearly impossible to overhaul.
	Any expression that yields a value may be used in the global scope, previously only commands were allowed.
	Column information restored to error messages, the column will display as 0 if data is not avalible.

v6
	Script Values may now hold arbitrary data, just make sure that your commands know how to handle it.
	Script code may be "compiled" into a pre-lexed version for storage, this is used by user commands and the like.
	Error messages no longer have the column, this was (almost) always wrong anyways.
	The Map and Array Indexables are now part of the base command package.
	The special array "params" is now write protected.
	The way strings are converted to booleans has changed.
	The way the element count of an Indexable is fetched has changed.
	Exit now a flag in the state, this is far more flexable than the old way

v5
	New array type
	Maps (and arrays) are now treated like Values

v4
	GDM and Parser combined into State
	Native command handler prototype changed to fit above change

v3
	return value handling changed (now stored in GDM)
	error flag added to GDM

v2
	array renamed map
	optional param names
	simple param checking (the count is verifyed (only if param names are used))
	command handling reworked. all commands are now added to the global data manager, user commands are no longer normal variables
	namespace. A namespace is more-or-less just a named root environment

v1
	The first version
