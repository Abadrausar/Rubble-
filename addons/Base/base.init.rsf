
# Load some helpful commands.

# These are the same "shell predefs" that are loaded by the Raptor shell by default.

# increment variable
(command ++ __name__ {
	(set [__name__] (int:add [[__name__]] 1))
})

# decrement variable
(command -- __name__ {
	(set [__name__] (int:sub [[__name__]] 1))
})

# for loop
(command for __init__ __test__ __incriment__ __code__ {
	(eval [__init__])
	(loop {
		(if (evalinnew [__test__]) {}{(breakloop false)})
		(evalinnew [__code__])
		(evalinnew [__incriment__])
		(break true)
	})
})

# while loop
(command while __test__ __code__ {
	(loop {
		(if (evalinnew [__test__]) {}{(breakloop false)})
		(evalinnew [__code__])
		(break true)
	})
})

# include a file
# requires the file io commands to be loaded
(command include __path__ {
	(evalinparent (fileio:read [__path__]))
})

# Rubble specific commands

# Placeholder template generator.
(command rubble:placeholder name {
	(rubble:template [name] ... {
		"Library template addon disabled."
	})
})

# Dependency checks

(command rubble:requireaddon me addon {
	(if (rubble:addonactive [addon]) {
	}{
		(rubble:abort (str:add "The \"" [me] "\" addon requires that the \"" [addon] "\" addon be active!\n"
		"Please activate that addon and try again."))
	})
})

(command rubble:incompatibleaddon me addon {
	(if (rubble:addonactive [addon]) {
		(rubble:abort (str:add "The \"" [me] "\" addon is incompatible with the \"" [addon] "\" addon!\n"
		"Please deactivate that addon and try again."))
	})
})

# Addon group checks

(command rubble:ingroup addon group {
	(set group (str:add [group] "/"))
	
	(if (str:cmp (str:left [addon] (str:len [group])) [group]) {
		(ret true)
	})
})

(command rubble:groupactive group {
	(var found false)
	(foreach [rubble:activeaddons] {
		(if (rubble:ingroup [params 1] [group]) {
			(set found true)
			(break false)
		}{
			(break true)
		})
	})
	
	(ret [found])
})

# Example (rubble:grouprequires "Better Dorfs" "Better Dorfs/Base")
(command rubble:grouprequires me addon {
	(if (rubble:groupactive [me]) {
		(if (rubble:addonactive [addon]) {
		}{
			(rubble:abort (str:add "The \"" [me] "\" addon group requires that the \"" [addon] "\" addon be active!\n"
			"Please activate that addon and try again."))
		})
	}{
		# No addons in the group are active, do nothing.
	})
})

(command rubble:groupincompatible me addon {
	(if (rubble:groupactive [me]) {
		(if (rubble:addonactive [addon]) {
			(rubble:abort (str:add "The \"" [me] "\" addon group is incompatible with the \"" [addon] "\" addon!\n"
			"Please deactivate that addon and try again."))
		})
	}{
		# No addons in the group are active, do nothing.
	})
})
